# CCFLAGS : -DDBUG -DTRACE -DDBUGV 

UNAME = $(shell uname -o)

#CCFLAGS = 
#CCFLAGS = -DDBUG -DTRACE 
CC = gcc 
CCFLAGS += -ggdb -DMAIN
#CC = gcc -O3

ifeq ($(OS),Windows_NT)
PYTHON = python2.4
CCFLAGS += $(FLAGS)
else
PYTHON = python2.2
CCFLAGS += -I$(HOME)/usr/include $(FLAGS)
endif

#SRCS = pso_globals.cpp pso.cpp optfunctions.cpp bird.cpp swarm.cpp tools.cpp pso_statistics.cpp movpeaks.c
OBJS = pso_globals.o pso.o optfunctions.o bird.o swarm.o tools.o pso_statistics.o movpeaks.o
HDRS = $(OBJS:.o=.h)
#OBJS = $(SRCS:.cpp=.o)

%.o : %.c %.h
	$(CC) -c $(CCFLAGS) $< -o $@

%.o : %.cpp %.h
	$(CC) -c $(CCFLAGS) $< -o $@


runpso.o: runpso.cpp
	$(CC) -c $(CCFLAGS) $< -o $@

java/psowrapper/psojava_wrap.o:
	${MAKE} java

swig : pso.i pso.cpp
	swig -python -c++ -o pso_wrap.cpp pso.i 
	$(CC) $(CCFLAGS) -c pso_wrap.cpp -I/usr/include/$(PYTHON)/

java : psojava.i pso.cpp 
	swig -java -c++ -package psowrapper -o java/psowrapper/psojava_wrap.cpp psojava.i 
	$(CC) $(CCFLAGS) -c java/psowrapper/psojava_wrap.cpp -I/C/Programme/Java/j2sdk1.4.2/include/ -I/C/Programme/Java/j2sdk1.4.2/include/win32
	mv psojava_wrap.o java/psowrapper

javamodule: $(OBJS) java/psowrapper/psojava_wrap.o
ifeq ($(OS),Windows_NT)
#cygwin
	$(CC) -shared $(OBJS) java/psowrapper/psojava_wrap.o -lgsl -lstdc++ -o java/pso.dll
else
#linux
	$(CC) -shared $(OBJS) java/psowrapper/psojava_wrap.o -lgsl -lgslcblas -lstdc++ -o java/libpso.so
endif

shared : $(OBJS) pso_wrap.o
ifeq ($(OS),Windows_NT)
#cygwin
	$(CC) -shared $(OBJS) pso_wrap.o -lgsl -lstdc++ -L/usr/lib/$(PYTHON)/config -l$(PYTHON)  -o _pso.dll
else
#linux
	$(CC) -shared $(OBJS) pso_wrap.o -L$(HOME)/usr/lib -lgsl -lgslcblas -lstdc++ -L/usr/lib/$(PYTHON)/config -l$(PYTHON)  -o _pso.so
endif

pso : $(OBJS)
ifeq ($(OS),Windows_NT)
#cygwin
	$(CC) $(OBJS) -o pso  -lgsl -lstdc++
else
#linux
	$(CC) $(OBJS) -o pso  -L$(HOME)/usr/lib -lgsl -lgslcblas -lstdc++ $(CCFLAGS)
endif

#$(OBJS) : $(SRCS)
#	echo $(SRCS)
#	$(CC) $(CCFLAGS) -c $(SRCS)

#.cpp.o :
#	$(.SOURCE)
#	$(CC) $(CFLAGS) -c $(.SOURCE)



all : $(OBJS)
	${MAKE} swig shared
#keep evaluate uptodate	
ifeq ($(OS),Windows_NT)
#cygwin
	cp _pso.dll pso.py ../evaluate/
else
#linux
	cp _pso.so pso.py ../evaluate/
endif

clean :
	-rm pso.exe _pso.dll
	-rm $(OBJS)

stdout :
	CCFLAGS += -DSTDOUT
	clean all


#make clean; make FLAGS=-DMAIN runpso
runpso : $(OBJS) runpso.o 
ifeq ($(UNAME), Cygwin)
#cygwin
	$(CC) $(OBJS) -L$(HOME)/usr/lib runpso.o -o runpso  -lgsl -lstdc++
else
	$(CC) $(OBJS) -L$(HOME)/usr/lib runpso.o -o runpso  -lgsl -lgslcblas -lstdc++
endif

lsearch : $(OBJS) lsearch.o
ifeq ($(UNAME), Cygwin)
#cygwin
	$(CC) $(OBJS) -L$(HOME)/usr/lib lsearch.o -o lsearch  -lgsl -lstdc++
else
	$(CC) $(OBJS) -L$(HOME)/usr/lib lsearch.o -o lsearch -lgsl -lgslcblas -lstdc++
endif
